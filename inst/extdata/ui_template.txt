  library(shiny)
  
  shinyUI(fluidPage( theme = 'style.css',
  shinyjs::useShinyjs(),
  
  # ---- Sidebar
  sidebarLayout(
  sidebarPanel(
    selectInput(inputId = 'selected_columns',
              label = 'Select variables',
              choices = colnames(data[, -1]),
              selected = selected_variables,
              multiple = T),
  
  tags$hr(),
  %s %s
  %s,
  width = 3  
  ),#-- sidebarPanel
  
  # Show a plot of the generated distribution
  mainPanel(
  navbarPage('Model Explorer',
             position = 'fixed-top',
             inverse = T,
  tabPanel('CeterisParibus',
            withSpinner(plotOutput('CeterisParibus'), color = '#4a3c89')),
  tabPanel('BreakDown',
            withSpinner(plotOutput('BreakDown'), color = '#4a3c89')),
  tabPanel('Shap',
            withSpinner(plotOutput('Shapley'), color = '#4a3c89')),
  tabPanel('shapeR',
            withSpinner(plotOutput('shapeR'), color = '#4a3c89')),
  tabPanel('Localmodel',
            withSpinner(plotOutput('LocalModel'), color = '#4a3c89')),
    tabPanel('Lime', 
           tags$div(class='box',
                     numericInput('lime_n_vars',
                                  label = 'Max number of features to be used for the surrogate model.',
                                  value = 3,
                                  min = 1, 
                                  max = ncol(data) - 1)),
            fluidRow(withSpinner(plotOutput('Lime'), color = '#4a3c89'))
  )
%s
    )
)  
  ) # -- sidebarLayout
  ) # --fluidPage
  ) # -- shinyUI